{{> header}}

<div class="loadingdiv" style="text-align: center; margin-top: 40px;">
    <div class="ld-outer">
        <div class="ld-inner"><img src="/images/preloader.gif"><br><br>
            <p><em>Please wait. . .</em></p>
        </div>
    </div>
</div>

<div class="container">
    {{# if products}}
        <div class="row">
            <div class="col-md-6 col sm-6 col-md-offset-3 col-sm-offset-3">
                <ul class="list-group">
                    {{# each products}}
                        <li class="list-group-item">
                            <span class="badge">{{ this.qty }}</span>
                            <strong>{{ this.item.title }}</strong>
                            <span id="price" class="label label-success">&#8358;{{ this.price }}</span>
                            <div class="btn-group">
                                <button class="btn btn-primary btn-xs dropdown-toggle" type="button"
                                        data-toggle="dropdown">Action
                                    <span class="caret"></span></button>
                                <ul class="dropdown-menu">
                                    <li><a href="#">Reduce by 1</a></li>
                                    <li><a href="#">Remove All</a></li>
                                </ul>
                            </div>
                        </li>
                    {{/each}}

                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 col sm-6 col-md-offset-3 col-sm-offset-3">
                <strong id="total-price">Total: ${{ totalPrice }}</strong>
            </div>
        </div>
        <hr>
        <div class="row">
            <div class="col-md-6 col sm-6 col-md-offset-3 col-sm-offset-3">
                <button type="button" id="button-pay" class="btn btn-success">Pay Now</button>
                <button type="button" id="pay-with-saved-card" class="btn btn-info">Pay with saved card</button>

            </div>
        </div>
    {{else}}
        <div class="row">
            <div class="col-md-6 col sm-6 col-md-offset-3 col-sm-offset-3">
                <h2>No items in cart</h2>
            </div>
        </div>
    {{/if}}
</div>

<script type="text/javascript">

    $('.loadingdiv').hide();

    window.localStorage.clear();

    document.addEventListener("DOMContentLoaded", function (event) {

        function makeid() {
            var text = "";
            var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for (var i = 0; i < 5; i++) {
                text += possible.charAt(Math.floor(Math.random() * possible.length));
            }
            return "TRXZ-" + text;
        }


        document.getElementById("button-pay").addEventListener("click", function (e) {

            var ramount = "";
            var hashedData = "";
            var API_publicKey = "FLWPUBK_TEST-33e0873bf799aa0c43ba0dcaa1fbdd6e-X";
            //var API_publicKey = "FLWPUBK-b282705b5b8c47d7b3c9dcea2c1a168f-X";

            //const API_publicKey = "FLWPUBK-10387a3e3f6ea2be86feea7ce9a442b4-X";//live
            var price = document.getElementById('total-price').innerHTML;
            var pricef = price.split('$');
            var txref, subaccounts;

            this.amount = pricef[1];
            ramount = this.amount;

            //purpose of hashing
            var hashingData2 = {
                PBFPubKey: "FLWPUBK-8e189fc497790b12b287bd0d8f511bfd-X",
                amount: ramount,
                custom_description: "payme",
                custom_logo: "https://image.ibb.co/dLg6AU/Screen_Shot_2018_09_13_at_5_14_40_PM.png",
                custom_title: "PayMe",
                country: "NG",
                payment_options: "account,card",
                currency: "NGN",
                customer_email: "michaelonyeforo112@gmail.com",
                customer_firstname: "Michael",
                customer_lastname: "Onyx",
                customer_phone: "234099940409"
            };

            var hashingData = {
                PBFPubKey: "FLWPUBK-8e189fc497790b12b287bd0d8f511bfd-X",
                amount: ramount,
                custom_description: "Account deposit 123603471",
                country: "NG",
                currency: "NGN",
                customer_email: "ucheavocardo@gmail.com",
                customer_firstname: "Uche",
                customer_lastname: "Onyewuchi",
                customer_phone: "2348067493045",
                payment_type: "account",
                payment_options: "account",
                redirect_url: "https://1x-pay.vagrant.lan",
                txref: "2004808809",
            };

            $.ajax({
                url: '/integrity-hash',
                method: 'POST',
                type: 'json',
                data: hashingData,
                success: function (response) {
                    hashedData = response.hash;
                    txref = response.txref;
                    console.log(response);

                    var payload = {
                        PBFPubKey: "FLWPUBK_TEST-33e0873bf799aa0c43ba0dcaa1fbdd6e-X",
                        // PBFPubKey: "FLWPUBK-8e189fc497790b12b287bd0d8f511bfd-X",
                        amount: ramount,
                        custom_description: "payme",
                        custom_title: "PayMe",
                        country: "NG",
                        currency: "NGN",
                        customer_email: "ucheavocardo@gmail.com",
                        customer_firstname: "Uche",
                        customer_lastname: "Onyewuchi",
                        customer_phone: "234099940409",
                        payment_type: "account",
                        payment_options: "account",
                        redirect_url: "https://m.1xbet.ng",
                        txref: txref
                    };

                    console.log(Object.keys(payload).map(function (key) {
                        return key + '=' + encodeURIComponent(payload[key]);
                    }).join('&'));

                    var x = getpaidSetup({
                        PBFPubKey: "FLWPUBK_TEST-33e0873bf799aa0c43ba0dcaa1fbdd6e-X",
                        amount: ramount,
                        custom_description: "Account deposit 123603471",
                        country: "NG",
                        currency: "NGN",
                        customer_email: "ucheavocardo@gmail.com",
                        customer_firstname: "Uche",
                        customer_lastname: "Onyewuchi",
                        customer_phone: "2348067493045",
                        payment_type:"account",
                        payment_options:"account",
                        redirect_url:"https://1x-pay.vagrant.lan",
                        txref: txref,
                        integrity_hash : hashedData,
                        // subaccounts: [
                        //     {
                        //         "id": "RS_0F13C8A3551A11B3D296D09D39E9F2F2",
                        //         "transaction_charge_type": "flat_subaccount",
                        //         "transaction_charge": "60"
                        //     }
                        // ],
                        onclose: function () {
                            console.log('closure here')
                        },
                        callback: function (response) {

                            console.log(response);

                            var flw_ref = response.tx.flwRef;

                            //saving a card
                            var new_data;

                            if (response.tx.hasOwnProperty('chargeToken')) {
                                new_data = {
                                    country: "NG",
                                    txRef: response.tx.txRef,
                                    IP: response.tx.IP,
                                    currency: response.tx.currency,
                                    token: response.tx.chargeToken.embed_token,
                                    subaccounts: [{
                                        id: "RS_0F13C8A3551A11B3D296D09D39E9F2F2",
                                        transaction_charge_type: "flat",
                                        transaction_charge: "50"
                                    }]
                                }
                                //  console.log('saved data: ', JSON.stringify(new_data))

                                 //window.localStorage.setItem("card-requirement", JSON.stringify(new_data));

                            }


                            if (response.tx.chargeResponseCode === '00' || response.tx.chargeResponseCode === '0') {
                                // redirect to a success page
                                $.ajax({
                                    url: '/verify-payment',
                                    method: 'POST',
                                    type: 'json',
                                    data: { txref: response.tx.txRef },
                                    success: function (response) {
                                        console.log("payment verified: ", response);

                                        if (response.hasOwnProperty('card')) {

                                            new_data.email = response.custemail;
                                            new_data.firstname = response.custname.split(' ')[0];
                                            new_data.lastname = response.custname.split(' ')[1];
                                            new_data.amount = response.amount;

                                            console.log('saved data: ', JSON.stringify(new_data));

                                            window.localStorage.setItem("card-requirement", JSON.stringify(new_data));

                                        }


                                        if (response.chargecode === "00" && response.amount.toString() === ramount) {
                                            x.close();
                                            swal('Hurray!', 'value given, get out of here!', 'success');
                                        }
                                        else {
                                            alert('something broke!');
                                        }

                                        var cardDetails;
                                        if (response.hasOwnProperty('card')) {
                                            cardDetails = {
                                                cardExpiryMonth: response.card.expirymonth,
                                                cardExpiryYear: response.card.expiryyear,
                                                cardBin: response.card.cardBIN,
                                                last4digits: response.card.last4digits,
                                                brand: response.card.brand,
                                                mToken: response.card.card_tokens['embedtoken'],
                                                token: response.card.life_time_token
                                            };
                                            console.log('saved-card:', cardDetails);

                                            window.localStorage.setItem('cardDetails', JSON.stringify(cardDetails));

                                        }

                                    },
                                    error: function (error) {
                                        console.log(error);
                                    }

                                })

                            }
                            else {
                                // redirect to a failure page.
                            }
                        }
                    });

                    // var hosted_page = {
                    //     PBFPubKey: "FLWPUBK-8e189fc497790b12b287bd0d8f511bfd-X",
                    //     amount: "550.00",
                    //     custom_description: "Account deposit 123603471",
                    //     country: "NG",
                    //     currency: "NGN",
                    //     customer_email: "ucheavocardo@gmail.com",
                    //     customer_firstname: "Uche",
                    //     customer_lastname: "Onyewuchi",
                    //     customer_phone: "2348067493045",
                    //     payment_type: "account",
                    //     payment_options: "account",
                    //     redirect_url: "https://1x-pay.vagrant.lan",
                    //     txref: txref,
                    //     integrity_hash: hashedData,
                    // };
                    //
                    // $.ajax(
                    //         {
                    //             url: 'https://api.ravepay.co/flwv3-pug/getpaidx/api/v2/hosted/pay',
                    //             method: 'POST',
                    //             type: 'json',
                    //             data: hosted_page,
                    //             success: function (response1) {
                    //                 window.location.replace(response1.data.link);
                    //             }
                    //         }
                    // )
                },
                error: function (error) {
                    console.log(error);
                }
            })
        });

        function spin() {
            $('.loadingdiv').show();
        }

        function unspin() {
            $('.loadingdiv').hide();

        }

        document.getElementById("pay-with-saved-card").addEventListener("click", function (e) {
            e.preventDefault();

            var card_req = window.localStorage.getItem('card-requirement');
            var card_details = window.localStorage.getItem('cardDetails');

            card_details = JSON.parse(card_details);

            if (card_details == null && card_req == null) {
                alert('Please make a payment first with a card to save for later. Use \'Pay Now\'');
                return;
            }
            card_req["token"] = card_details.token;

            card_req = JSON.parse(card_req);

            console.log('card-req: ', card_req);

            spin();

            $.ajax({
                url: '/chargeWithSafeToken',
                method: 'post',
                dataType: 'json',
                data: card_req,
                success: function (response) {
                    console.log("token payment", response);
                    $.ajax({
                        url: '/verify-payment',
                        method: 'POST',
                        type: 'json',
                        data: {txref: response.txRef},
                        success: function (response) {
                            unspin();
                            console.log("payment verified 2: ", response);
                            if (response.chargecode === "00") {
                                swal("Yah!", response.status, "success")
                            } else {
                                swal("Error", response.message, "error");
                            }

                        },
                        error: function (error) {
                            console.log(error);
                        }

                    })
                },
                error: function (error) {
                    console.log(error);
                }
            })
        });


    });


</script>
<!--<script type="text/javascript" src="https://api.ravepay.co/flwv3-pug/getpaidx/api/flwpbf-inline.js"></script>-->
<script type="text/javascript"
        src="https://ravesandboxapi.flutterwave.com/flwv3-pug/getpaidx/api/flwpbf-inline.js"></script>
